{
    "preprocessing": {
        "enable": 1,
        "fastqc": {
            "enable": 1,
            "#--casava": "Files come from raw casava output. Files in the same sample group (differing only by the group number) will be analysed as a set rather than individually. Sequences with the filter flag set in the header will be excluded from the analysis. Files must have the same names given to them by casava (including being gzipped and ending with .gz) otherwise they won't be grouped together correctly.",
            "--casava": 0,
            "#--nofilter": "If running with --casava then don't remove read flagged by casava as poor quality when performing the QC analysis.",
            "--nofilter": 0,
            "#--nogroup": "Disable grouping of bases for reads >50bp. All reports will show data for every base in the read.  WARNING: Using this option will cause fastqc to crash and burn if you use it on really long reads, and your plots may end up a ridiculous size. You have been warned!",
            "--nogroup": 0,
            "#-t": "Specifies the number of files which can be processed simultaneously.  Each thread will be allocated 250MB of memory so you shouldn't run more threads than your available memory will cope with, and not more than 6 threads on a 32 bit machine",
            "-t": 0,
            "#-c": "Specifies a non-default file which contains the list of contaminants to screen overrepresented sequences against. The file must contain sets of named contaminants in the form name[tab]sequence.  Lines prefixed with a hash will be ignored.",
            "-c": 0,
            "#-a": "Specifies a non-default file which contains the list of adapter sequences which will be explicity searched against the library. The file must contain sets of named adapters in the form name[tab]sequence.  Lines prefixed with a hash will be ignored.",
            "-a": 0,
            "#-l": "Specifies a non-default file which contains a set of criteria which will be used to determine the warn/error limits for the various modules.  This file can also be used to selectively remove some modules from the output all together.  The format needs to mirror the default limits.txt file found in the Configuration folder.",
            "-l": 0,
            "#-k": "Specifies the length of Kmer to look for in the Kmer content module. Specified Kmer length must be between 2 and 10. Default length is 7 if not specified.",
            "-k": 0
        },
        "fastp": {
            "enable": 0,
            "#-6": "indicate the input is using phred64 scoring (it'll be converted to phred33, so the output will still be phred33)",
            "-6": 0,
            "#--interleaved_in": "indicate that <in1> is an interleaved FASTQ which contains both read1 and read2. Disabled by default.",
            "--interleaved_in": 0,
            "#-V": "output verbose log information (i.e. when every 1M reads are processed).",
            "-V": 0,
            "#-A": "adapter trimming is enabled by default. If this option is specified, adapter trimming is disabled",
            "-A": 0,
            "#--adapter_sequence": "the adapter for read1. For SE data, if not specified, the adapter will be auto-detected. For PE data, this is used if R1/R2 are found not overlapped. (string [=auto])",
            "--adapter_sequence": 0,
            "#--adapter_sequence_r2": "the adapter for read2 (PE data only). This is used if R1/R2 are found not overlapped. If not specified, it will be the same as <adapter_sequence> (string [=auto])",
            "--adapter_sequence_r2": 0,
            "#--adapter_fasta": "specify a FASTA file to trim both read1 and read2 (if PE) by all the sequences in this FASTA file (string [=])",
            "--adapter_fasta": 0,
            "#--detect_adapter_for_pe": "by default, the auto-detection for adapter is for SE data input only, turn on this option to enable it for PE data.",
            "--detect_adapter_for_pe": 0,
            "#-f": "trimming how many bases in front for read1, default is 0 (int [=0])",
            "-f": 0,
            "#-t": "trimming how many bases in tail for read1, default is 0 (int [=0])",
            "-t": 0,
            "#-b": "if read1 is longer than max_len1, then trim read1 at its tail to make it as long as max_len1. Default 0 means no limitation (int [=0])",
            "-b": 0,
            "#-F": "trimming how many bases in front for read2. If it's not specified, it will follow read1's settings (int [=0])",
            "-F": 0,
            "#-T": "trimming how many bases in tail for read2. If it's not specified, it will follow read1's settings (int [=0])",
            "-T": 0,
            "#-B": "if read2 is longer than max_len2, then trim read2 at its tail to make it as long as max_len2. Default 0 means no limitation. If it's not specified, it will follow read1's settings (int [=0])",
            "-B": 0,
            "#--trim_poly_g": "force polyG tail trimming, by default trimming is automatically enabled for Illumina NextSeq/NovaSeq data",
            "--trim_poly_g": 0,
            "#--poly_g_min_len": "the minimum length to detect polyG in the read tail. 10 by default. (int [=10])",
            "--poly_g_min_len": 0,
            "#-G": "disable polyG tail trimming, by default trimming is automatically enabled for Illumina NextSeq/NovaSeq data",
            "-G": 0,
            "#--trim_poly_x": "enable polyX trimming in 3' ends.",
            "--trim_poly_x": 0,
            "#--poly_x_min_len": "the minimum length to detect polyX in the read tail. 10 by default. (int [=10])",
            "--poly_x_min_len": 0,
            "#-5": "move a sliding window from front (5') to tail, drop the bases in the window if its mean quality < threshold, stop otherwise.",
            "-5": 0,
            "#-3": "move a sliding window from tail (3') to front, drop the bases in the window if its mean quality < threshold, stop otherwise.",
            "-3": 0,
            "#-r": "move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop.",
            "-r": 0,
            "#-W": "the window size option shared by cut_front, cut_tail or cut_sliding. Range: 1~1000, default: 4 (int [=4])",
            "-W": 0,
            "#--cut_mean_quality": "the mean quality requirement option shared by cut_front, cut_tail or cut_sliding. Range: 1~36 default: 20 (Q20) (int [=20])",
            "--cut_mean_quality": 0,
            "#--cut_front_window_size": "the window size option of cut_front, default to cut_window_size if not specified (int [=4])",
            "--cut_front_window_size": 0,
            "#--cut_front_mean_quality": "the mean quality requirement option for cut_front, default to cut_mean_quality if not specified (int [=20])",
            "--cut_front_mean_quality": 0,
            "#--cut_tail_window_size": "the window size option of cut_tail, default to cut_window_size if not specified (int [=4])",
            "--cut_tail_window_size": 0,
            "#--cut_tail_mean_quality": "the mean quality requirement option for cut_tail, default to cut_mean_quality if not specified (int [=20])",
            "--cut_tail_mean_quality": 0,
            "#--cut_right_window_size": "the window size option of cut_right, default to cut_window_size if not specified (int [=4])",
            "--cut_right_window_size": 0,
            "#--cut_right_mean_quality": "the mean quality requirement option for cut_right, default to cut_mean_quality if not specified (int [=20])",
            "--cut_right_mean_quality": 0,
            "#-Q": "quality filtering is enabled by default. If this option is specified, quality filtering is disabled",
            "-Q": 0,
            "#-q": "the quality value that a base is qualified. Default 15 means phred quality >=Q15 is qualified. (int [=15])",
            "-q": 0,
            "#-u": "how many percents of bases are allowed to be unqualified (0~100). Default 40 means 40% (int [=40])",
            "-u": 0,
            "#-n": "if one read's number of N base is >n_base_limit, then this read/pair is discarded. Default is 5 (int [=5])",
            "-n": 0,
            "#-e": "if one read's average quality score <avg_qual, then this read/pair is discarded. Default 0 means no requirement (int [=0])",
            "-e": 0,
            "#-L": "length filtering is enabled by default. If this option is specified, length filtering is disabled",
            "-L": 0,
            "#--length_required": "reads shorter than length_required will be discarded, default is 15. (int [=15])",
            "--length_required": 0,
            "#--length_limit": "reads longer than length_limit will be discarded, default 0 means no limitation. (int [=0])",
            "--length_limit": 0,
            "#--low_complexity_filter": "enable low complexity filter. The complexity is defined as the percentage of base that is different from its next base (base[i] != base[i+1]).",
            "--low_complexity_filter": 0,
            "#--complexity_threshold": "the threshold for low complexity filter (0~100). Default is 30, which means 30% complexity is required. (int [=30])",
            "--complexity_threshold": 0,
            "#--filter_by_index1": "specify a file contains a list of barcodes of index1 to be filtered out, one barcode per line (string [=])",
            "--filter_by_index1": 0,
            "#--filter_by_index2": "specify a file contains a list of barcodes of index2 to be filtered out, one barcode per line (string [=])",
            "--filter_by_index2": 0,
            "#--filter_by_index_threshold": "the allowed difference of index barcode for index filtering, default 0 means completely identical. (int [=0])",
            "--filter_by_index_threshold": 0,
            "#--correction": "enable base correction in overlapped regions (only for PE data), default is disabled",
            "--correction": 0,
            "#--overlap_len_require": "the minimum length to detect overlapped region of PE reads. This will affect overlap analysis based PE merge, adapter trimming and correction. 30 by default. (int [=30])",
            "--overlap_len_require": 0,
            "#--overlap_diff_limit": "the maximum number of mismatched bases to detect overlapped region of PE reads. This will affect overlap analysis based PE merge, adapter trimming and correction. 5 by default. (int [=5])",
            "--overlap_diff_limit": 0,
            "#--overlap_diff_percent_limit": "the maximum percentage of mismatched bases to detect overlapped region of PE reads. This will affect overlap analysis based PE merge, adapter trimming and correction. Default 20 means 20%. (int [=20])",
            "--overlap_diff_percent_limit": 0,
            "#--umi": "enable unique molecular identifier (UMI) preprocessing",
            "--umi": 0,
            "#--umi_loc": "specify the location of UMI, can be (index1/index2/read1/read2/per_index/per_read, default is none (string [=])",
            "--umi_loc": 0,
            "#--umi_len": "if the UMI is in read1/read2, its length should be provided (int [=0])",
            "--umi_len": 0,
            "#--umi_prefix": "if specified, an underline will be used to connect prefix and UMI (i.e. prefix=UMI, UMI=AATTCG, final=UMI_AATTCG). No prefix by default (string [=])",
            "--umi_prefix": 0,
            "#--umi_skip": "if the UMI is in read1/read2, fastp can skip several bases following UMI, default is 0 (int [=0])",
            "--umi_skip": 0,
            "#-p": "enable overrepresented sequence analysis.",
            "-p": 0,
            "#-P": "one in (--overrepresentation_sampling) reads will be computed for overrepresentation analysis (1~10000), smaller is slower, default is 20. (int [=20])",
            "-P": 0,
            "#-w": "worker thread number, default is 2 (int [=2])",
            "-w": 0
        },
        "trimmomatic": {
            "enable": 0,
            "-threads": 0,
            "-phred33": 0,
            "-phred64": 0,
            "-validatePairs": 0,
            "#ILLUMINACLIP": "this parameter should be string",
            "ILLUMINACLIP": 0,
            "LEADING": 0,
            "TRAILING": 0,
            "#SLIDINGWINDOW": "this parameter should be string",
            "SLIDINGWINDOW": 0,
            "MINLEN": 0
        },
        "cutadapt": {
            "enable": 0,
            "#-a": "Sequence of an adapter ligated to the 3' end (paired data: of the first read). The adapter and subsequent bases are trimmed. If a '$' character is appended ('anchoring'), the adapter is only found if it is a suffix of the read.",
            "-a": 0,
            "#-g": "Sequence of an adapter ligated to the 5' end (paired data: of the first read). The adapter and any preceding bases are trimmed. Partial matches at the 5' end are allowed. If a '^' character is prepended ('anchoring'), the adapter is only found if it is a prefix of the read.",
            "-g": 0,
            "#-b": "Sequence of an adapter that may be ligated to the 5' or 3' end (paired data: of the first read). Both types of matches as described under -a und -g are allowed. If the first base of the read is part of the match, the behavior is as with -g, otherwise as with -a. This option is mostly for rescuing failed library preparations - do not use if you know which end your adapter was ligated to!",
            "-b": 0,
            "#-e": "Maximum allowed error rate as value between 0 and 1 (no. of errors divided by length of matching region). Default: 0.1 (=10%)",
            "-e": 0,
            "#--no-indels": "Allow only mismatches in alignments. Default: allow both mismatches and indels",
            "--no-indels": 0,
            "#-n": "Remove up to COUNT adapters from each read. Default: 1",
            "-n": 0,
            "#-O": "Require MINLENGTH overlap between read and adapter for an adapter to be found. Default: 3",
            "-O": 0,
            "#--match-read-wildcards": "Interpret IUPAC wildcards in reads. Default: False",
            "--match-read-wildcards": 0,
            "#-N": "Do not interpret IUPAC wildcards in adapters.",
            "-N": 0,
            "#-u": "Remove bases from each read (first read only if paired). If LENGTH is positive, remove bases from the beginning. If LENGTH is negative, remove bases from the end. Can be used twice if LENGTHs have different signs. This is applied *before* adapter trimming.",
            "-u": 0,
            "#--nextseq-trim": "NextSeq-specific quality trimming (each read). Trims also dark cycles appearing as high-quality G bases.",
            "--nextseq-trim": 0,
            "#-q": "Trim low-quality bases from 5' and/or 3' ends of each read before adapter removal. Applied to both reads if data is paired. If one value is given, only the 3' end is trimmed. If two comma-separated cutoffs are given, the 5' end is trimmed with the first cutoff, the 3' end with the second.",
            "-q": 0,
            "#--quality-base": "Assume that quality values in FASTQ are encoded as ascii(quality + N). This needs to be set to 64 for some old Illumina FASTQ files. Default: 33",
            "--quality-base": 0,
            "#--length": "Shorten reads to LENGTH. Positive values remove bases at the end while negative ones remove bases at the beginning. This and the following modifications are applied after adapter trimming.",
            "--length": 0,
            "#--trim-n": "Trim N's on ends of reads.",
            "--trim-n": 0,
            "#--length-tag": "Search for TAG followed by a decimal number in the description field of the read. Replace the decimal number with the correct length of the trimmed read. For example, use --length-tag 'length=' to correct fields like 'length=123'.",
            "--length-tag": 0,
            "#--strip-suffix": "Remove this suffix from read names if present. Can be given multiple times.",
            "--strip-suffix": 0,
            "#-x": "Add this prefix to read names. Use {name} to insert the name of the matching adapter.",
            "-x": 0,
            "#-y": "Add this suffix to read names; can also include {name}",
            "-y": 0,
            "#--zero-cap": "Change negative quality values to zero.",
            "--zero-cap": 0,
            "#-m": "Discard reads shorter than LEN. Default: 0",
            "-m": 0,
            "#-M": "Discard reads longer than LEN. Default: no limit",
            "-M": 0,
            "#--max-n": "Discard reads with more than COUNT 'N' bases. If COUNT is a number between 0 and 1, it is interpreted as a fraction of the read length.",
            "--max-n": 0,
            "#--discard-trimmed": "Discard reads that contain an adapter. Use also -O to avoid discarding too many randomly matching reads.",
            "--discard-trimmed": 0,
            "#--discard-untrimmed": "Discard reads that do not contain an adapter.",
            "--discard-untrimmed": 0,
            "#--discard-casava": "Discard reads that did not pass CASAVA filtering (header has :Y:).",
            "--discard-casava": 0,
            "#-A": "3' adapter to be removed from second read in a pair.",
            "-A": 0,
            "#-G": "5' adapter to be removed from second read in a pair.",
            "-G": 0,
            "#-B": "5'/3 adapter to be removed from second read in a pair.",
            "-B": 0,
            "#-U": "Remove LENGTH bases from second read in a pair.",
            "-U": 0,
            "#-p": "Write second read in a pair to FILE.",
            "-p": 0,
            "#--pair-adapters": "Treat adapters given with -a/-A etc. as pairs. Either both or none are removed from each read pair.",
            "--pair-adapters": 0,
            "#--pair-filter": "Which of the reads in a paired-end read have to match the filtering criterion in order for the pair to be filtered. Default: any",
            "--pair-filter": 0
        },
        "sickle": {
            "enable": 0,
            "#-t": "--qual-type, Type of quality values (solexa (CASAVA < 1.3), illumina (CASAVA 1.3 to 1.7), sanger (which is CASAVA >= 1.8)) (required)",
            "-t": 0,
            "#-q": "--qual-threshold, Threshold for trimming based on average quality in a window. Default 20.",
            "-q": 20,
            "#-l": "--length-threshold, Threshold to keep a read based on length after trimming. Default 20.",
            "-l": 20,
            "#-x": "--no-fiveprime, Don't do five prime trimming.",
            "-x": 0,
            "#-n": "--trunc-n, Truncate sequences at position of first N.",
            "-n": 0
        },
        "SOAPnuke": {
            "enable": 1
        }
    },
    "identification": {
        "enable": 1,
        "number_of_candidate_similar_genome": 20,
        "blastn": {
            "blast_db_path": "fungi_db",
            "#num_threads": "Number of threads to use in the BLAST search (integer, at least one). Default is one. Incompatible with: remote",
            "num_threads": 0,
            "#evalue": "Expectation value (E) threshold for saving hits Default = `10'",
            "evalue": 0,
            "#num_alignments": "Number of database sequences to show alignments for Default = `250'",
            "num_alignments": 0,
            "#task": "Task to execute (string, default 'megablast') Allowed values 'blastn', 'blastn-short', 'dc-megablast', 'megablast' (the default), or 'vecscreen'",
            "task": 0,
            "#c": "Penalty for a nucleotide mismatch (integer, at most zero).",
            "penalty": 0,
            "#reward": "Reward for a nucleotide match (integer, at least zero).",
            "reward": 0,
            "#dust": "Filter query sequence with DUST (string). Format: 'yes', 'level window linker', or 'no' to disable. Default = '20 64 1'.",
            "dust": 0,
            "#filtering_db": "BLAST database containing filtering elements (i.e. repeats).",
            "filtering_db": 0,
            "#window_masker_taxid": "Enable WindowMasker filtering using a Taxonomic ID (integer).",
            "window_masker_taxid": 0,
            "#no_greedy": "Use non-greedy dynamic programming extension",
            "no_greedy": 0,
            "#min_raw_gapped_score": "Minimum raw gapped score to keep an alignment in the preliminary gapped and traceback stages (integer).",
            "min_raw_gapped_score": 0,
            "#ungapped": "Perform ungapped alignment only?",
            "ungapped": 0,
            "#off_diagonal_range": "Number of off-diagonals to search for the 2nd hit (integer). Expects a positive integer, or 0 (default) to turn off. Added in BLAST 2.2.23+",
            "off_diagonal_range": 0
        },
        "assembly": {
            "enable": 1,
            "megahit": {
                "enable": 1,
                "#--min-count": "<int>          minimum multiplicity for filtering (k_min+1)-mers [2]",
                "--min-count": 0,
                "#--k-list": "<int,int,..>   comma-separated list of kmer size all must be odd, in the range 15-255, increment <= 28) [21,29,39,59,79,99,119,141]",
                "--k-list": 0,
                "#--no-mercy": "do not add mercy kmers",
                "--no-mercy": 0,
                "#--bubble-level": "<int>          intensity of bubble merging (0-2), 0 to disable [2]",
                "--bubble-level": 0,
                "#--merge-level": "<l,s>          merge complex bubbles of length <= l*kmer_size and similarity >= s [20,0.95]",
                "--merge-level": 0,
                "#--prune-level": "<int>          strength of low depth pruning (0-3) [2]",
                "--prune-level": 0,
                "#--prune-depth": "<int>          remove unitigs with avg kmer depth less than this value [2]",
                "--prune-depth": 0,
                "#--low-local-ratio": "<float>        ratio threshold to define low local coverage contigs [0.2]",
                "--low-local-ratio": 0,
                "#--max-tip-len": "<int>          remove tips less than this value [2*k]",
                "--max-tip-len": 0,
                "#--no-local": "disable local assembly",
                "--no-local": 0,
                "#--kmin-1pass": "use 1pass mode to build SdBG of k_min",
                "--kmin-1pass": 0,
                "#-m": "<float>        max memory in byte to be used in SdBG construction (if set between 0-1, fraction of the machine's total memory) [0.9]",
                "-m": 0,
                "#--mem-flag": "<int>          SdBG builder memory mode 0: minimum; 1: moderate; others: use all memory specified by '-m/--memory' [1]",
                "--mem-flag": 0,
                "#-t": "<int>          number of CPU threads [# of logical processors]",
                "-t": 0,
                "#--no-hw-accel": "run MEGAHIT without BMI2 and POPCNT hardware instructions",
                "--no-hw-accel": 0,
                "#--min-contig-len": "<int>          minimum length of contigs to output [200]",
                "--min-contig-len": 0
            },
            "spades": {
                "enable": 0,
                "#--iontorrent": "this flag is required for IonTorrent data",
                "--iontorrent": 0,
                "#--pacbio": "<filename>  file with PacBio reads",
                "--pacbio": 0,
                "#--nanopore": "<filename>  file with Nanopore reads",
                "--nanopore": 0,
                "#-t": "<int>  number of threads [default: 16]",
                "-t": 0,
                "#-m": "<int>  RAM limit for SPAdes in Gb (terminates if exceeded) [default: 250]",
                "-m": 0,
                "#-k": "<int,int,...>  comma-separated list of k-mer sizes (must be odd and less than 128) [default: 'auto']",
                "-k": 0,
                "#--cov-cutoff": "<float>  coverage cutoff value (a positive float number, or 'auto', or 'off') [default: 'off']",
                "--cov-cutoff": 0,
                "#--phred-offset": "<33 or 64>  PHRED quality offset in the input reads (33 or 64) [default: auto-detect]",
                "--phred-offset": 0
            },
            "velvet": {
                "enable": 0,
                "velveth": {
                    "#hash_length": "EITHER an odd integer (if even, it will be decremented) <= 31 (if above, will be reduced) OR: m,M,s where m and M are odd integers (if not, they will be decremented) with m < M <= 31 (if above, will be reduced) and s is a step (even number). Velvet will then hash from k=m to k=M with a step of s",
                    "hash_length": 0,
                    "#-short": "-shortPaired",
                    "-short": 0,
                    "#-short2": "-shortPaired2",
                    "-short2": 0,
                    "#-long": "-longPaired",
                    "-long": 0
                },
                "velvetg": {
                    "#-cov_cutoff": "<floating-point|auto>  : removal of low coverage nodes AFTER tour bus or allow the system to infer it (default: no removal)",
                    "-cov_cutoff": 0,
                    "#-ins_length": "<integer>  : expected distance between two paired end reads (default: no read pairing)",
                    "-ins_length": 0,
                    "#-read_trkg": "<yes|no>  : tracking of short read positions in assembly (default: no tracking)",
                    "-read_trkg": 0,
                    "#-min_contig_lgth": "<integer> : minimum contig length exported to contigs.fa file (default: hash length * 2)",
                    "-min_contig_lgth": 0,
                    "#-amos_file": "<yes|no>  : export assembly to AMOS file (default: no export)",
                    "-amos_file": 0,
                    "#-exp_cov": "<floating point|auto> : expected coverage of unique regions or allow the system to infer it  (default: no long or paired-end read resolution)",
                    "-exp_cov": 0,
                    "#-long_cov_cutoff": "<floating-point>: removal of nodes with low long-read coverage AFTER tour bus (default: no removal)",
                    "-long_cov_cutoff": 0,
                    "#-ins_length*": "<integer>  : expected distance between two paired-end reads in the respective short-read dataset (default: no read pairing)",
                    "-ins_length*": 0,
                    "#-ins_length_long": "<integer> : expected distance between two long paired-end reads (default: no read pairing)",
                    "-ins_length_long": 0,
                    "#-ins_length*_sd": "<integer>  : est. standard deviation of respective dataset (default: 10% of corresponding length) [replace '*' by nothing, '2' or '_long' as necessary]",
                    "-ins_length*_sd": 0,
                    "#-scaffolding": "<yes|no>  : scaffolding of contigs used paired end information (default: on)",
                    "-scaffolding": 0,
                    "#-max_branch_length": "<integer>  : maximum length in base pair of bubble (default: 100)",
                    "-max_branch_length": 0,
                    "#-max_divergence": "<floating-point>: maximum divergence rate between two branches in a bubble (default: 0.2)",
                    "-max_divergence": 0,
                    "#-max_gap_count": "<integer>  : maximum number of gaps allowed in the alignment of the two branches of a bubble (default: 3)",
                    "-max_gap_count": 0,
                    "#-min_pair_count": "<integer>  : minimum number of paired end connections to justify the scaffolding of two long contigs (default: 5)",
                    "-min_pair_count": 0,
                    "#-max_coverage": "<floating point> : removal of high coverage nodes AFTER tour bus (default: no removal)",
                    "-max_coverage": 0,
                    "#-coverage_mask": "<int> : minimum coverage required for confident regions of contigs (default: 1)",
                    "-coverage_mask": 0,
                    "#-long_mult_cutoff": "<int>  : minimum number of long reads required to merge contigs (default: 2)",
                    "-long_mult_cutoff": 0,
                    "#-alignments": "<yes|no>  : export a summary of contig alignment to the reference sequences (default: no)",
                    "-alignments": 0,
                    "#-exportFiltered": "<yes|no>  : export the long nodes which were eliminated by the coverage filters (default: no)",
                    "-exportFiltered": 0,
                    "#-clean": "<yes|no>  : remove all the intermediary files which are useless for recalculation (default : no)",
                    "-clean": 0,
                    "#-very_clean": "<yes|no>  : remove all the intermediary files (no recalculation possible) (default: no)",
                    "-very_clean": 0,
                    "#-paired_exp_fraction": "<double>  : remove all the paired end connections which less than the specified fraction of the expected count (default: 0.1)",
                    "-paired_exp_fraction": 0,
                    "#-conserveLong": "<yes|no>  : preserve sequences with long reads in them (default no)",
                    "-conserveLong": 0
                }
            },
            "canu": {
                "enable": 0,
                "#genomeSize=": "The genome size should be your best guess of the haploid genome size of what is being assembled.  It is used primarily to estimate coverage in reads, NOT as the desired assembly size.  Fractional values are allowed: '4.7m' equals '4700k' equals '4700000'",
                "genomeSize=": 0,
                "-pacbio-raw": 0,
                "-pacbio-corrected": 0,
                "-nanopore-raw": 0,
                "-nanopore-corrected": 0
            }
        },
        "alignment_tool": {
            "snap": 1,
            "bowtie2": 0
        },
        "minimap2": {
            "#-H": "use homopolymer-compressed k-mer (preferrable for PacBio)",
            "-H": 0,
            "#-k": "INT       k-mer size (no larger than 28) [15]",
            "-k": 0,
            "#-w": "INT       minimizer window size [10]",
            "-w": 0,
            "#-I": "NUM       split index for every ~NUM input bases [4G]",
            "-I": 0,
            "#-f": "FLOAT     filter out top FLOAT fraction of repetitive minimizers [0.0002]",
            "-f": 0,
            "#-g": "NUM       stop chain enlongation if there are no minimizers in INT-bp [5000]",
            "-g": 0,
            "#-G": "NUM       max intron length (effective with -xsplice; changing -r) [200k]",
            "-G": 0,
            "#-F": "NUM       max fragment length (effective with -xsr or in the fragment mode) [800]",
            "-F": 0,
            "#-r": "NUM       bandwidth used in chaining and DP-based alignment [500]",
            "-r": 0,
            "#-n": "INT       minimal number of minimizers on a chain [3]",
            "-n": 0,
            "#-m": "INT       minimal chaining score (matching bases minus log gap penalty) [40]",
            "-m": 0,
            "#-X": "skip self and dual mappings (for the all-vs-all mode)",
            "-X": 0,
            "#-p": "FLOAT     min secondary-to-primary score ratio [0.8]",
            "-p": 0,
            "#-N": "INT       retain at most INT secondary alignments [5]",
            "-N": 0,
            "#-A": "INT       matching score [2]",
            "-A": 0,
            "#-B": "INT       mismatch penalty [4]",
            "-B": 0,
            "#-O": "INT[,INT] gap open penalty [4,24]",
            "-O": 0,
            "#-E": "INT[,INT] gap extension penalty; a k-long gap costs min{O1+k*E1,O2+k*E2} [2,1]",
            "-E": 0,
            "#-z": "INT[,INT] Z-drop score and inversion Z-drop score [400,200]",
            "-z": 0,
            "#-s": "INT       minimal peak DP alignment score [80]",
            "-s": 0,
            "#-u": "CHAR      how to find GT-AG. f:transcript strand, b:both strands, n:don't match GT-AG [n]",
            "-u": 0,
            "#-x": "STR       preset (always applied before other options; see minimap2.1 for details) []  - map-pb/map-ont: PacBio/Nanopore vs reference mapping  - ava-pb/ava-ont: PacBio/Nanopore read overlap  - asm5/asm10/asm20: asm-to-ref mapping, for ~0.1/1/5% sequence divergence  - splice: long-read spliced alignment  - sr: genomic short-read mapping",
            "-x": 0
        }
    },
    "annotation": {
        "alignment_tool": {
            "bowtie2": 0,
            "snap": 0
        },
        "cds_annotation": 1,
        "mlst": 1,
        "prokka": {
            "enable": 0,
            "#--addgenes": "Add 'gene' features for each 'CDS' feature (default OFF)",
            "--addgenes": 0,
            "#--addmrna": "Add 'mRNA' features for each 'CDS' feature (default OFF)",
            "--addmrna": 0,
            "#--evalue": "[n.n]     Similarity e-value cut-off (default '1e-09')",
            "--evalue": 0,
            "#--coverage": "[n.n]   Minimum coverage on query protein (default '80')",
            "--coverage": 0,
            "#--cpus": "[N]         Number of CPUs to use [0=all] (default '8')",
            "--cpus": 0,
            "#--mincontiglen": "[N] Minimum contig size [NCBI needs 200] (default '1')",
            "--mincontiglen": 0,
            "#--rfam": "Enable searching for ncRNAs with Infernal+Rfam (SLOW!) (default '0')",
            "--rfam": 0,
            "#--norrna": "Don't run rRNA search (default OFF)",
            "--norrna": 0,
            "#--notrna": "Don't run tRNA search (default OFF)",
            "--notrna": 0,
            "#--rnammer": "Prefer RNAmmer over Barrnap for rRNA prediction (default OFF)",
            "--rnammer": 0
        }
    }
}
